{"ast":null,"code":"var _jsxFileName = \"/home/longthai/Desktop/city-swimmer/src/Views/SinglePage.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nfunction SinglePage(props) {\n  const url = 'https://iot.fvh.fi/opendata/uiras/uiras2_v1.json';\n  const [beaches, setBeaches] = useState({\n    loading: false,\n    dt: null\n  });\n  let content = null;\n  useEffect(() => {\n    setBeaches({\n      loading: true,\n      dt: null\n    });\n    axios.get(url).then(response => {\n      setBeaches({\n        loading: false,\n        dt: response.data.sensors\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  if (beaches.loading) {\n    content = /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }\n    });\n  } //get temp: {beaches.dt[beach].data.slice(-1)[0].temp_water}\n\n\n  if (beaches.dt) {\n    content = Object.keys(beaches.dt).map((beach, key) => {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"p-5\"\n        /*beach = {beaches.dt[beach]}*/\n        ,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/${beaches.dt[beach].meta.name}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, beaches.dt[beach].meta.name));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \" \", content, \" \");\n}\n\nexport default SinglePage;","map":{"version":3,"sources":["/home/longthai/Desktop/city-swimmer/src/Views/SinglePage.js"],"names":["React","axios","SinglePage","props","url","beaches","setBeaches","useState","loading","dt","content","useEffect","get","then","response","data","sensors","catch","err","console","log","Object","keys","map","beach","key","meta","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAMC,GAAG,GAAG,kDAAZ;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC;AAACC,IAAAA,OAAO,EAAC,KAAT;AAAgBC,IAAAA,EAAE,EAAC;AAAnB,GAAD,CAAtC;AACA,MAAIC,OAAO,GAAG,IAAd;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZL,IAAAA,UAAU,CAAC;AACPE,MAAAA,OAAO,EAAE,IADF;AAEPC,MAAAA,EAAE,EAAE;AAFG,KAAD,CAAV;AAKAR,IAAAA,KAAK,CAACW,GAAN,CAAUR,GAAV,EACKS,IADL,CACUC,QAAQ,IAAI;AACdR,MAAAA,UAAU,CAAC;AACPE,QAAAA,OAAO,EAAE,KADF;AAEPC,QAAAA,EAAE,EAAEK,QAAQ,CAACC,IAAT,CAAcC;AAFX,OAAD,CAAV;AAIP,KAND,EAOKC,KAPL,CAOYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KATL;AAUH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAGb,OAAO,CAACG,OAAX,EAAoB;AAChBE,IAAAA,OAAO,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACH,GAzBsB,CA0BvB;;;AACA,MAAGL,OAAO,CAACI,EAAX,EAAe;AACXC,IAAAA,OAAO,GAAGW,MAAM,CAACC,IAAP,CAAYjB,OAAO,CAACI,EAApB,EAAwBc,GAAxB,CAA4B,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAClD,0BACI;AAAI,QAAA,SAAS,EAAG;AAAM;AAAtB;AAAsD,QAAA,GAAG,EAAIA,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAK,IAAGpB,OAAO,CAACI,EAAR,CAAWe,KAAX,EAAkBE,IAAlB,CAAuBC,IAAK,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKtB,OAAO,CAACI,EAAR,CAAWe,KAAX,EAAkBE,IAAlB,CAAuBC,IAD5B,CADJ,CADJ;AAOH,KARS,CAAV;AASH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOjB,OAAP,MADJ;AAGH;;AAED,eAAeR,UAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios'\n\nfunction SinglePage(props) {\n    const url = 'https://iot.fvh.fi/opendata/uiras/uiras2_v1.json'\n    const [beaches, setBeaches] = useState({loading:false, dt:null})\n    let content = null\n\n    useEffect(() => {\n        setBeaches({\n            loading: true, \n            dt: null\n        })\n\n        axios.get(url)\n            .then(response => {\n                setBeaches({\n                    loading: false,\n                    dt: response.data.sensors,\n                })\n        })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    if(beaches.loading) {\n        content = <Loader />\n    }\n    //get temp: {beaches.dt[beach].data.slice(-1)[0].temp_water}\n    if(beaches.dt) {\n        content = Object.keys(beaches.dt).map((beach, key) => {\n            return (\n                <h1 className = \"p-5\" /*beach = {beaches.dt[beach]}*/ key = {key}> \n                    <Link to = {`/${beaches.dt[beach].meta.name}`}>\n                        {beaches.dt[beach].meta.name}\n                    </Link>\n                </h1>\n            )\n        })\n    }\n\n    return (\n        <div> {content} </div>\n    )\n}\n\nexport default SinglePage "]},"metadata":{},"sourceType":"module"}