{"ast":null,"code":"var _jsxFileName = \"/home/longthai/Desktop/city-swimmer/src/Views/SinglePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Loader from '../Components/Loader';\nimport { useParams } from 'react-router-dom';\n\nfunction SinglePage(props) {\n  const {\n    id\n  } = useParams();\n  const url = \"https://iot.fvh.fi/opendata/uiras/uiras2_v1.json\";\n  const [beach, setBeach] = useState({\n    loading: false,\n    dt: null\n  });\n  let content = null;\n  useEffect(() => {\n    setBeach({\n      loading: true,\n      dt: null\n    });\n    axios.get(url).then(response => {\n      setBeach({\n        loading: false,\n        dt: response.data.sensors\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  if (beach.loading) {\n    content = /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    });\n  } //get temp: {beach.dt[beach].data.slice(-1)[0].temp_water}\n\n\n  if (beach.dt) {\n    content = Object.keys(beach.dt).map((item, key) => {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"p-5\",\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, \"This is the single page for \", beach.dt[item].meta.name);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \" \", content, \" \");\n}\n\nexport default SinglePage;","map":{"version":3,"sources":["/home/longthai/Desktop/city-swimmer/src/Views/SinglePage.js"],"names":["React","useState","useEffect","axios","Loader","useParams","SinglePage","props","id","url","beach","setBeach","loading","dt","content","get","then","response","data","sensors","catch","err","console","log","Object","keys","map","item","key","meta","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAM;AAACC,IAAAA;AAAD,MAAOH,SAAS,EAAtB;AACA,QAAMI,GAAG,GAAG,kDAAZ;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC;AAACW,IAAAA,OAAO,EAAC,KAAT;AAAgBC,IAAAA,EAAE,EAAC;AAAnB,GAAD,CAAlC;AACA,MAAIC,OAAO,GAAG,IAAd;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAAC;AACLC,MAAAA,OAAO,EAAE,IADJ;AAELC,MAAAA,EAAE,EAAE;AAFC,KAAD,CAAR;AAKAV,IAAAA,KAAK,CAACY,GAAN,CAAUN,GAAV,EACKO,IADL,CACUC,QAAQ,IAAI;AACdN,MAAAA,QAAQ,CAAC;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,EAAE,EAAEI,QAAQ,CAACC,IAAT,CAAcC;AAFb,OAAD,CAAR;AAIP,KAND,EAOKC,KAPL,CAOYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KATL;AAUH,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAGX,KAAK,CAACE,OAAT,EAAkB;AACdE,IAAAA,OAAO,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACH,GA1BsB,CA2BvB;;;AAEA,MAAGJ,KAAK,CAACG,EAAT,EAAa;AACTC,IAAAA,OAAO,GAAGU,MAAM,CAACC,IAAP,CAAYf,KAAK,CAACG,EAAlB,EAAsBa,GAAtB,CAA0B,CAACC,IAAD,EAAOC,GAAP,KAAe;AAE/C,0BACI;AAAI,QAAA,SAAS,EAAG,KAAhB;AAAsB,QAAA,GAAG,EAAIA,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCACiClB,KAAK,CAACG,EAAN,CAASc,IAAT,EAAeE,IAAf,CAAoBC,IADrD,CADJ;AAKH,KAPS,CAAV;AAQH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOhB,OAAP,MADJ;AAGH;;AAED,eAAeR,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Loader from '../Components/Loader'\nimport { useParams } from 'react-router-dom';\n\nfunction SinglePage(props) {\n    const {id} = useParams();\n    const url = \"https://iot.fvh.fi/opendata/uiras/uiras2_v1.json\"\n    const [beach, setBeach] = useState({loading:false, dt:null})\n    let content = null\n\n    useEffect(() => {\n        setBeach({\n            loading: true, \n            dt: null\n        })\n\n        axios.get(url)\n            .then(response => {\n                setBeach({\n                    loading: false,\n                    dt: response.data.sensors\n                })\n        })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    if(beach.loading) {\n        content = <Loader />\n    }\n    //get temp: {beach.dt[beach].data.slice(-1)[0].temp_water}\n\n    if(beach.dt) {\n        content = Object.keys(beach.dt).map((item, key) => {\n            \n            return (\n                <h1 className = \"p-5\" key = {key}> \n                    This is the single page for {beach.dt[item].meta.name}\n                </h1>\n            )\n        }) \n    }\n\n    return (\n        <div> {content} </div>\n    )\n}\n\nexport default SinglePage "]},"metadata":{},"sourceType":"module"}